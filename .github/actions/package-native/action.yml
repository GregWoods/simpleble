name: 'Package Native Target'
description: 'Packages a directory into a ZIP file for Linux, macOS, or Windows using zip.'

inputs:
  source-dir:
    description: 'Path to the directory to package (e.g., build/install)'
    required: true
  output-dir:
    description: 'Directory where the ZIP file will be created (e.g., artifacts)'
    required: true
  archive-name:
    description: 'Name of the output ZIP file (without .zip extension)'
    required: true
  os:
    description: 'Operating system (linux, macos, or windows) to determine shell and command'
    required: true

runs:
  using: "composite"
  steps:
    - name: Package Directory (Linux/macOS)
      if: inputs.os == 'linux' || inputs.os == 'macos'
      shell: bash
      run: |
        mkdir -p "${{ inputs.output-dir }}"
        cd "${{ inputs.source-dir }}"
        zip -r "${{ inputs.output-dir }}/${{ inputs.archive-name }}.zip" .

    - name: Package Directory (Windows)
      if: inputs.os == 'windows'
      shell: powershell
      run: |
        Write-Host "GITHUB_WORKSPACE: $env:GITHUB_WORKSPACE"
        Write-Host "Raw source-dir: ${{ inputs.source-dir }}"
        Write-Host "Raw output-dir: ${{ inputs.output-dir }}"
        Write-Host "`nContents of GitHub workspace:"
        Get-ChildItem -Path $env:GITHUB_WORKSPACE -Recurse | Select-Object FullName
        Write-Host "`nContents of build directory (if it exists):"
        if (Test-Path "$env:GITHUB_WORKSPACE\build_simpleble") {
            Get-ChildItem -Path "$env:GITHUB_WORKSPACE\build_simpleble" -Recurse | Select-Object FullName
        } else {
            Write-Host "build_simpleble directory does not exist"
        }
        $sourceDir = "${{ inputs.source-dir }}".Replace('/', '\')
        $outputDir = "${{ inputs.output-dir }}".Replace('/', '\')
        Write-Host "`nConverted source-dir: $sourceDir"
        Write-Host "Converted output-dir: $outputDir"
        Write-Host "Current directory: $(Get-Location)"
        New-Item -ItemType Directory -Force -Path $outputDir
        Set-Location $sourceDir
        Compress-Archive -Path * -DestinationPath "$outputDir\${{ inputs.archive-name }}.zip"