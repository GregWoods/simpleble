name: CI Linux

on:
  workflow_dispatch:
  workflow_call:  # This allows it to be called from ci_main.yml

jobs:
  # tests:
  #   runs-on: ubuntu-22.04
  #   steps:
  #   - name: Clone Repository
  #     uses: actions/checkout@v4
  #   - name: Install Dependencies
  #     env:
  #         DEBIAN_FRONTEND: noninteractive
  #     run: |
  #       sudo -H apt-get update -y
  #       sudo -H apt-get install -y dbus libdbus-1-dev python3-dev
  #   - name: Setup cmake
  #     uses: ./.github/actions/setup-cmake

  #   - name: Setup gtest
  #     uses: ./.github/actions/setup-gtest

  #   - name: Start DBus
  #     run: |
  #       echo "DBUS_SESSION_BUS_ADDRESS=$(dbus-daemon --config-file=/usr/share/dbus-1/session.conf --print-address --fork | cut -d, -f1)" >> $GITHUB_ENV

  #   - name: SimpleBLE Unit Tests
  #     run: |
  #       cmake -B $GITHUB_WORKSPACE/build_unit_simpleble -DCMAKE_BUILD_TYPE=Release -DGTEST_ROOT=$GITHUB_WORKSPACE/googletest/install -S $GITHUB_WORKSPACE/simpleble -DSIMPLEBLE_TEST=ON
  #       cmake --build $GITHUB_WORKSPACE/build_unit_simpleble --config Release --parallel 4
  #       $GITHUB_WORKSPACE/build_unit_simpleble/bin/simpleble_test

  examples:
    runs-on: ubuntu-22.04

    steps:
    - name: Clone Repository
      uses: actions/checkout@v4
    - name: Install Dependencies
      run: |
        sudo -H apt-get update -y
        sudo -H apt-get install -y libdbus-1-dev
      env:
        DEBIAN_FRONTEND: noninteractive
    - name: Setup cmake
      uses: ./.github/actions/setup-cmake
    - name: Compile SimpleBLE Examples for Ubuntu
      run: |
        cmake -B $GITHUB_WORKSPACE/build_simpleble_examples -DCMAKE_BUILD_TYPE=Release -S $GITHUB_WORKSPACE/examples/simpleble
        cmake --build $GITHUB_WORKSPACE/build_simpleble_examples --config Release --parallel 4

  # build:
  #   runs-on: ubuntu-22.04
  #   needs: [tests, examples]

  #   strategy:
  #     fail-fast: false
  #     max-parallel: 4
  #     matrix:
  #       # For testing purposes only static libraries are built to reduce run time.
  #       # In release workflow all combinations are build.
  #       options: [
  #         {container: dockcross/linux-x64, target: linux-x64},
  #         {container: dockcross/linux-x86, target: linux-x86},
  #         {container: dockcross/linux-armv6-lts, target: linux-armv6},
  #       ]
  #       type: [static]

  #   container:
  #     image: ${{ matrix.options.container }}
  #   steps:
  #     - name: Clone repository
  #       uses: actions/checkout@v4

  #     - name: Build DBus
  #       uses: ./.github/actions/build-dbus
  #       with:
  #         os: ${{ runner.os }}
  #         arch: ${{ matrix.options.target }}

  #     - name: Build SimpleBLE Library using Action
  #       uses: ./.github/actions/build-native-linux
  #       with:
  #         source-dir: "$(pwd)/simpleble"
  #         build-dir: "$(pwd)/build_simpleble"
  #         install-prefix: "$(pwd)/build_simpleble/install"
  #         library-type: ${{ matrix.type }}
  #         build-config: 'Release'
  #         target-name: 'simpleble'
  #         # NOTE: The build step requires us to extend the CMAKE_FIND_ROOT_PATH to include the dbus install path,
  #         #       as cross-compilation environments will ignore CMAKE_PREFIX_PATH.
  #         cmake-options: "-DCMAKE_FIND_ROOT_PATH='${CMAKE_FIND_ROOT_PATH};/tmp/install/dbus'"

  #     - name: Package Artifact
  #       shell: bash
  #       run: |
  #         mkdir -p {{ github.workspace }}/artifacts
  #         zip -r {{ github.workspace }}/artifacts/simpleble_${{ matrix.type }}_${{ matrix.options.target }}.zip {{ github.workspace }}/build_simpleble/install

  #     - name: Upload binaries to job
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: simpleble_${{ matrix.type }}_${{ matrix.options.target }}
  #         path: artifacts/simpleble_${{ matrix.type }}_${{ matrix.options.target }}.zip

  # python:
  #   needs: [tests, examples]
  #   uses: ./.github/workflows/ci_wheels.yml
  #   secrets: inherit
  #   with:
  #     os: ubuntu-22.04

  # rust:
  #   runs-on: ${{ matrix.os }}
  #   needs: [tests, examples]

  #   strategy:
  #     fail-fast: false
  #     max-parallel: 4
  #     matrix:
  #       os: [ubuntu-20.04, ubuntu-22.04]

  #   steps:
  #   - name: Clone Repository
  #     uses: actions/checkout@v4
  #   - name: Install Dependencies
  #     run: |
  #       sudo -H apt-get update -y
  #       sudo -H apt-get install -y libdbus-1-dev
  #     env:
  #       DEBIAN_FRONTEND: noninteractive
  #   - name: Setup cmake
  #     uses: ./.github/actions/setup-cmake
  #   - name: Install Rust
  #     uses: dtolnay/rust-toolchain@stable
  #   - name: Compile SimpleBLE
  #     run: cargo build